---
- name: Install nginx
  package: name=nginx state=present
  tags: nginx

- name: Install Pip (Ubuntu)
  package:
    name: "python3-pip"
    state: present
  when: ansible_os_family == "Debian"

- name: Install Pip (CentOS)
  package:
    name: "python-pip"
    state: present
  when: ansible_os_family == "RedHat"
  
- name: Ensure python OpenSSL dependencies are installed.
  pip:
    name: pyOpenSSL
    state: present

- name: Create directory for nginx SSL certificates
  file: path=/etc/nginx/ssl state=directory mode=0755
  tags: nginx

- name: Check certificate file
  stat:
    path: /etc/nginx/ssl/server.crt
  register: cert_file_check

- name: Generate SSL private key
  openssl_privatekey:
    path: /etc/nginx/ssl/server.key
    size: 4096
  when: not cert_file_check.stat.exists

- name: Generate SSL certificate request
  openssl_csr:
    path: /etc/nginx/ssl/server.csr
    privatekey_path: /etc/nginx/ssl/server.key
    common_name: "{{ ansible_host }}"
  when: not cert_file_check.stat.exists

- name: Generate self-signed SSL certificate
  openssl_certificate:
    path: /etc/nginx/ssl/server.crt
    provider: selfsigned
    privatekey_path: /etc/nginx/ssl/server.key
    csr_path: /etc/nginx/ssl/server.csr
  notify:
   - reload nginx
  when: not cert_file_check.stat.exists

- name: Install nginx.conf
  template: src={{ item }}.j2 dest=/etc/nginx/ssl/{{ item }} owner=root group=root mode=0644
  with_items:
   - dhparam.pem
  notify:
   - reload nginx

- name: Install nginx conf.d files
  template: src={{ item }}.j2 dest=/etc/nginx/conf.d/{{ item }} owner=root group=root mode=0644
  with_items:
   - default.conf
  notify:
   - reload nginx
  tags: nginx

- name: Ensure nginx is running and enabled to start at boot
  service: name=nginx state=started enabled=yes
  tags: nginx
