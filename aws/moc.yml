---
- name: Get default subnets IDs
  hosts: localhost
  gather_facts: False
  tasks:
    - ec2_vpc_subnet_facts:
        aws_access_key: "{{ access_key }}"
        aws_secret_key: "{{ secret_key }}"
        region: "{{ region }}"
        filters:
          default-for-az: "true"
      register: default_subnets
      when: vpc_subnet_id is undefined
    - name: Check if subnet is specified
      fail:
        msg: "You did not specify the vpc_subnet_id variable and your account does not contain any default subnets. Please, either specify the variable or mark one of your subnets as a default."
      when: default_subnets.subnets|length == 0 and vpc_subnet_id is undefined
  tags: moc

- name: Create moc security group
  hosts: localhost
  gather_facts: False
  tasks:
  - name: Create Security group
    ec2_group:
      ec2_access_key: "{{ access_key }}"
      ec2_secret_key: "{{ secret_key }}"
      name: "{{ moc_security_group }}"
      description: "Default security group"
      region: "{{ region }}"
      purge_rules_egress: false
      purge_rules: false
      vpc_id: "{{ vpc_id | default('') }}"
      rules:
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
  tags: moc

- name: Create moc
  hosts: localhost
  gather_facts: False
  vars:
    volumes:
      - device_name: /dev/sda1
        volume_size: 128
        delete_on_termination: true
  tasks:
    - name: Launch instance
      ec2:
        ec2_access_key: "{{ access_key }}"
        ec2_secret_key: "{{ secret_key }}"
        key_name: "{{ awskeypair_name }}"
        instance_tags:
          Name: "{{ moc_instance_name }}"
        group: "{{ moc_security_group }}"
        instance_type: "{{ moc_instance_type }}"
        image: "{{ image }}"
        count: "{{ moc_count_instances }}"
        wait: yes
        region: "{{ region }}"
        vpc_subnet_id: "{{ vpc_subnet_id | default(subnet_id) }}"
        volumes: "{{ volumes }}"
        assign_public_ip: yes
      vars:
        subnets: "default_subnets.subnets|default('')"
        subnet: "subnets.0|default('')"
        subnet_id: "{{ subnet.subnet_id|default('') }}"
      register:   ec2
    - name: Add new instance to host group
      add_host: hostname={{ item.public_ip }} groupname=launched
      with_items: "{{ ec2.instances }}"
    - name: Wait for SSH to come up
      wait_for: host={{ item.public_ip }} port=22 delay=90 timeout=320 state=started
      with_items: "{{ ec2.instances }}"
      when: ec2.changed
  tags: moc

- name: Installing python
  hosts: launched
  gather_facts: False
  user: ubuntu
  become: True
  vars:
     ansible_ssh_port: 22
  tasks:
    - name: Install python
      raw: test -e /usr/bin/python || (sudo apt -y update && sudo apt install -y python-minimal)

- name: EC2 access setup
  hosts: localhost
  roles:
    - moc-access
